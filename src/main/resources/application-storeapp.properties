spring.application.name=storeapp

# Using PostgreSQL database
spring.datasource.url=jdbc:postgresql://localhost:5432/storeapp_db
spring.datasource.username=postgres
spring.datasource.password=08170911

# Configures PostgreSQL to handle large objects (LOBs like BLOB/CLOB) in a non-transactional context.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Specify the Hibernate dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Automatically update the database schema: Hibernate will adjust the schema to match the entity classes upon startup.
spring.jpa.hibernate.ddl-auto=update

# Show SQL statements in the console to help with debugging.
spring.jpa.show-sql=true

# Server port for StoreApp
server.port=8080

## RabbitMQ config
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin

# Output logs to logs/storeapp.log
logging.file.name=logs/storeapp.log

# Set the global log level to INFO, and record logs of INFO and above levels
logging.level.root=INFO

# Define the log format, including timestamp, level, class name and log message
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %level - %logger{36} - %msg%n

# JWT ??
jwt.secret=5970337336763979244226452948404D635166546A576E5A7234753778214125
jwt.expiration=36000000